openapi: 3.0.0
info:
  title: Storyblok Managmenet OpenAPI Specs
  description: |
    Unofficial Storyblok Management OpenAPI Specs. Generated from
    https://www.storyblok.com/docs/api/management/v1 by mostly ChatGPT ;-)
  version: 0.0.1

security:
  - BearerAuth: []

paths:
  /v1/spaces/{space_id}/:
    parameters:
      - $ref: "#/components/parameters/spaceIdParam"

    get:
      summary: Get a space
      description: Get a space
      operationId: getSpace
      tags:
        - spaces
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  space:
                    $ref: "#/components/schemas/Space"

  /v1/spaces/{space_id}/components/:
    parameters:
      - $ref: "#/components/parameters/spaceIdParam"
    post:
      summary: Create a component
      description: Create a component
      operationId: createComponent
      tags:
        - components
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComponentInput"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: "#/components/schemas/Component"

  /v1/spaces/{space_id}/components/{id}:
    parameters:
      - $ref: "#/components/parameters/spaceIdParam"
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
        description: The ID of the component

    get:
      summary: Get a component
      description: Get a component
      operationId: getComponent
      tags:
        - components
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: "#/components/schemas/Component"
    put:
      summary: Update a component
      description: Update a component
      operationId: updateComponent
      tags:
        - components
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComponentInput"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: "#/components/schemas/Component"

    delete:
      summary: Delete a component
      description: Delet a component
      operationId: deleteComponent
      tags:
        - components
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: "#/components/schemas/Component"

  /v1/spaces/{space_id}/component_groups/:
    post:
      tags:
        - components
      summary: Create Component Group
      operationId: createComponentGroup
      parameters:
        - $ref: "#/components/parameters/spaceIdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComponentGroupInput"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  component_group:
                    $ref: "#/components/schemas/ComponentGroup"

  /v1/spaces/{space_id}/component_groups/{group_id}:
    get:
      tags:
        - components
      summary: Get Component Group by ID
      operationId: getComponentGroup
      parameters:
        - $ref: "#/components/parameters/spaceIdParam"
        - $ref: "#/components/parameters/groupIdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  component_group:
                    $ref: "#/components/schemas/ComponentGroup"
    put:
      tags:
        - components
      summary: Update Component Group by ID
      operationId: updateComponentGroup
      parameters:
        - $ref: "#/components/parameters/spaceIdParam"
        - $ref: "#/components/parameters/groupIdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComponentGroupInput"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  component_group:
                    $ref: "#/components/schemas/ComponentGroup"
    delete:
      tags:
        - components
      summary: Delete Component Group by ID
      operationId: deleteComponentGroup
      parameters:
        - $ref: "#/components/parameters/spaceIdParam"
        - $ref: "#/components/parameters/groupIdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  component_group:
                    $ref: "#/components/schemas/ComponentGroup"



  /spaces/{space_id}/webhooks:
    get:
      summary: List Webhooks
      description: Retrieve a list of webhooks in a space.
      parameters:
        - $ref: "#/components/parameters/spaceIdParam"
        - name: token
          in: query
          description: The API access token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhooks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Webhook"
                  total:
                    type: integer

  /spaces/{space_id}/webhooks/{webhook_id}:
    get:
      summary: Get Webhook
      description: Retrieve a specific webhook by ID.
      parameters:
        - $ref: "#/components/parameters/spaceIdParam"
        - name: webhook_id
          in: path
          description: The ID of the webhook
          required: true
          schema:
            type: string
        - name: token
          in: query
          description: The API access token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Webhook"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  parameters:
    spaceIdParam:
      in: path
      name: space_id
      required: true
      schema:
        type: integer
        format: int64
      description: The ID of the space

    groupIdParam:
      in: path
      name: group_id
      schema:
        type: integer
        format: int64
      required: true
      description: The ID of the component group to retrieve

  schemas:
    ComponentInput:
      type: object
      description: ComponentInput
      properties:
        name:
          type: string
          description: Technical name used for component property in entries
        display_name:
          type: string
          description: The display name of the component
        image:
          type: string
          description: URL to the preview image, if uploaded
        preview:
          type: string
          description: Define the field that should be used for preview in the interface
        is_root:
          type: boolean
          description: Component should be usable as a Content Type
        is_nestable:
          type: boolean
          description: Component should be insertable in blocks field type fields
        component_group_uuid:
          type: string
          format: uuid
          description: The component group uuid of the component
          x-go-type: uuid.UUID
          x-go-type-import:
            name: uuid
            path: "github.com/gofrs/uuid"
        schema:
          type: object
          description: The definition of fields (schema) for this component
          additionalProperties:
            $ref: "#/components/schemas/FieldInput"
          # Hack; storyblok is not using the pos field but the order of the
          # fields in the schema.
          x-go-type: orderedmap.OrderedMap[string,FieldInput]
          x-go-type-import:
            name: orderedmap
            path: "github.com/wk8/go-ordered-map/v2"
      required:
        - name

    Component:
      type: object
      description: Component
      allOf:
        - $ref: "#/components/schemas/ComponentInput"
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: The ID of the component
            created_at:
              type: string
              format: date-time
              description: The creation timestamp of the component
            all_presets:
              type: array
              items: {}
              description: An array of presets associated with the component
            preset_id:
              type: string
              description: The ID of the preset associated with the component (null if not set)
            real_name:
              type: string
              description: The real name of the component
          required:
            - id
            - created_at

    FieldInput:
      type: object
      properties:
        type:
          type: string
          description: The type of the field
        pos:
          type: integer
          format: int64
          description: The position of the field

        add_https:
          type: boolean
          description: "Prepends https: to stop usage of relative protocol"
          default: false

        asset_folder_id:
          type: integer
          format: int64
          description: "Default asset folder numeric id to store uploaded image of that field"

        can_sync:
          type: boolean
          description: "Advanced usage to sync with field in preview; Default: false"
          default: false

        component_whitelist:
          type: array
          items:
            type: string
          description: "Array of component/content type names: [\"post\",\"page\",\"product\"]"

        datasource_slug:
          type: string
          description: "Define selectable datasources string; Effects editor only if source=internal"

        default_value:
          type: string
          description: "Default value for the field; Can be an escaped JSON object"

        description:
          type: string
          description: "Description shown in the editor interface"

        display_name:
          type: string
          description: "Name of the field for the editor interface"

        disable_time:
          type: boolean
          description: "Disables time selection from date picker; Default: false"
          default: false

        external_datasource:
          type: string
          description: "Define external datasource JSON Url; Effects editor only if source=external"

        field_type:
          type: string
          description: "Name of the custom field type plugin"

        filetypes:
          type: array
          items:
            type: string
          description: "Array of file type names: [\"images\", \"videos\", \"audios\", \"texts\"]"

        folder_slug:
          type: string
          description: "Filter on selectable stories path; Effects editor only if source=internal_stories; In case you have a multi-language folder structure you can add the '{0}' placeholder and the path will be adapted dynamically. Examples: \"{0}/categories/\", {0}/{1}/categories/"

        image_crop:
          type: boolean
          description: "Activate force crop for images: (true/false)"

        image_height:
          type: string
          description: "Define height in px or height ratio if keep_image_size is enabled"

        image_width:
          type: string
          description: "Define width in px or width ratio if keep_image_size is enabled"

        keep_image_size:
          type: boolean
          description: "Keep original size: (true/false)"

        keys:
          type: array
          items:
            type: string
          description: "Array of field keys to include in this section"

        max_length:
          type: integer
          format: int64
          description: "Set the max length of the input string"

        maximum:
          type: integer
          format: int64
          description: "Maximum amount of added bloks in this blok field"

        no_translate:
          type: boolean
          description: "Should be excluded in translation export"

        options:
          type: array
          description: 'Array of datasource entries [{name:"", value:""}]; Effects editor only if source=undefined'
          items:
            $ref: "#/components/schemas/FieldOption"

        tooltip:
          type: boolean
          description: "Show the description as a tooltip"
          default: false

        preview_field:
          type: boolean
          description: "Is used as instance preview field below component name in bloks types"

        regex:
          type: string
          description: "Client Regex validation for the field"

        required:
          type: boolean
          description: "Is field required; Default: false"
          default: false

        restrict_components:
          type: boolean
          description: "Activate restriction nestable component option; Default: false"
          default: false

        restrict_content_types:
          type: boolean
          description: "Activate restriction content type option"

        rich_markdown:
          type: boolean
          description: "Enable rich markdown view by default (true/false)"

        rtl:
          type: boolean
          description: "Enable global RTL for this field"

        source:
          type: string
          description: "Possible values: undefined: Self; internal_stories: Stories; internal: Datasource; external: API Endpoint in Datasource Entries Array Format"

        translatable:
          type: boolean
          description: "Can field be translated; Default: false"
          default: false

        use_uuid:
          type: boolean
          description: "Default: true; available in option and source=internal_stories"
          default: true


      required:
        - type
        - pos

    Field:
      type: object
      allOf:
        - $ref: "#/components/schemas/FieldInput"
        - type: object
          properties:
            id:
              type: integer
              format: int64
              description: Numeric Unique ID

    FieldOption:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value

    ComponentGroupInput:
      type: object
      properties:
        name:
          type: string
          description: The name of the component group
      required:
        - name

    ComponentGroup:
      type: object
      allOf:
        - $ref: "#/components/schemas/ComponentGroupInput"
        - type: object
          properties:
            id:
              type: integer
              format: int64
            uuid:
              type: string
              format: uuid
              description: The UUID of the component group
              x-go-type: uuid.UUID
              x-go-type-import:
                name: uuid
                path: "github.com/gofrs/uuid"
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
          required:
            - id
            - uuid
            - created_at
            - updated_at

    Space:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the space
        name:
          type: string
          description: The name of the space
        domain:
          type: string
          description: The domain of the space
        uniq_domain:
          type: string
          description: The unique domain of the space (null if not set)
        plan:
          type: string
          description: The plan of the space
        plan_level:
          type: integer
          description: The plan level of the space
        limits:
          type: object
          description: The limits of the space
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
          description: The creation timestamp of the space
        role:
          type: string
          description: The role of the user in the space
        owner_id:
          type: integer
          description: The ID of the owner of the space
        story_published_hook:
          type: string
          description: The story published hook of the space (null if not set)
        environments:
          type: string
          description: The environments of the space (null if not set)
        stories_count:
          type: integer
          description: The count of stories in the space
        parent_id:
          type: string
          description: The ID of the parent space (null if not set)
        assets_count:
          type: integer
          description: The count of assets in the space
        searchblok_id:
          type: string
          description: The Searchblok ID of the space (null if not set)
        duplicatable:
          type: string
          description: Indicates whether the space is duplicatable (null if not set)
        request_count_today:
          type: integer
          description: The count of requests made today
        api_requests:
          type: integer
          description: The total number of API requests allowed
        exceeded_requests:
          type: integer
          description: The count of exceeded API requests
        billing_address:
          type: object
          description: The billing address of the space
          additionalProperties: {}
        routes:
          type: array
          items: {}
          description: An array of routes
        euid:
          type: string
          description: The EUID of the space (null if not set)
        trial:
          type: boolean
          description: Indicates whether the space is in trial mode
        default_root:
          type: string
          description: The default root of the space
        has_slack_webhook:
          type: boolean
          description: Indicates whether the space has a Slack webhook
        api_logs_per_month:
          type: array
          items: {}
          description: An array of API logs per month
        first_token:
          type: string
          description: The first token of the space
        has_pending_tasks:
          type: boolean
          description: Indicates whether the space has pending tasks
        options:
          type: object
          description: The options of the space
          additionalProperties: {}
        collaborators:
          type: array
          items: {}
          description: An array of collaborators
        settings:
          type: array
          items: {}
          description: An array of settings
        owner:
          type: object
          description: The owner of the space
          additionalProperties: {}

    Webhook:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        events:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
