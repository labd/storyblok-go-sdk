ComponentBase:
  type: object
  properties:
    name:
      type: string
      description: Technical name used for component property in entries
    display_name:
      type: string
      description: The display name of the component
    image:
      type: string
      description: URL to the preview image, if uploaded
    preview_field:
      type: string
      description: Define the field that should be used for preview in the interface
    preview_tmpl:
      type: string
      description: Define the template that should be used for preview in the interface
    icon:
      type: string
      description: An optional icon for the component to identify this component type in the interface
      enum:
        - "block-@"
        - "block-1-2block"
        - "block-add"
        - "block-arrow-pointer"
        - "block-block"
        - "block-buildin"
        - "block-center-m"
        - "block-comment"
        - "block-doc"
        - "block-dollar-sign"
        - "block-email"
        - "block-image"
        - "block-keyboard"
        - "block-locked"
        - "block-map-pin"
        - "block-mobile"
        - "block-monitor"
        - "block-paycard"
        - "block-resize-fc"
        - "block-cart"
        - "block-share"
        - "block-shield-2"
        - "block-shield"
        - "block-sticker"
        - "block-suitcase"
        - "block-table-2"
        - "block-table"
        - "block-tag"
        - "block-text-c"
        - "block-text-img-c"
        - "block-text-img-l"
        - "block-text-img-r-l"
        - "block-text-img-r"
        - "block-text-img-t-l"
        - "block-text-img-t-r"
        - "block-text-l"
        - "block-text-r"
        - "block-unlocked"
        - "block-wallet"
    color:
      type: string
      description: Css color used as background for the icon
    is_root:
      type: boolean
      description: Component should be usable as a Content Type
    is_nestable:
      type: boolean
      description: Component should be insertable in blocks field type fields
    component_group_uuid:
      type: string
      format: uuid
      description: The component group uuid of the component
      x-go-type: uuid.UUID
      x-go-type-import:
        name: uuid
        path: "github.com/gofrs/uuid"
    schema:
      type: object
      description: The definition of fields (schema) for this component
      additionalProperties:
        $ref: "#/FieldInput"
      # Hack; storyblok is not using the pos field but the order of the
      # fields in the schema.
      x-go-type: orderedmap.OrderedMap[string,FieldInput]
      x-go-type-import:
        name: orderedmap
        path: "github.com/wk8/go-ordered-map/v2"
  required:
    - name

ComponentCreateInput:
  type: object
  properties:
    component:
      $ref: "#/ComponentBase"
  required:
    - component

ComponentUpdateInput:
  type: object
  allOf:
    - $ref: "#/ComponentCreateInput"

Component:
  type: object
  description: A component is a standalone entity that is meaningful in its own right. While components (or bloks) can be nested in each other, semantically they remain equal. Each component is a small piece of your data structure which can be filled with content or nested by your content editor. One component can consist of as many field types as required.
  allOf:
    - $ref: "#/ComponentBase"
    - type: object
      properties:
        id:
          type: integer
          format: int64
          description: The ID of the component
        created_at:
          type: string
          format: date-time
          description: The creation timestamp of the component
        updated_at:
          type: string
          format: date-time
          description: The update timestamp of the component
        preset_id:
          type: string
          description: The ID of the preset associated with the component (null if not set)
        real_name:
          type: string
          description: The real name of the component
      required:
        - id
        - created_at
        - updated_at

FieldInput:
  type: object
  properties:
    type:
      type: string
      description: The type of your field.
    pos:
      type: integer
      format: int64
      description: Position of the field in the component.
    add_https:
      type: boolean
      description: Prepends 'https:' to avoid relative protocol issues (image/file fields).
      default: false
    allow_target_blank:
      type: boolean
      description: Allows links in richtext to open in a new tab.
      default: false
    asset_folder_id:
      type: integer
      format: int64
      description: Defines the asset folder for uploaded images (asset fields).
    can_sync:
      type: boolean
      description: Allows syncing with the field in preview (advanced usage).
      default: false
    component_whitelist:
      type: array
      items:
        type: string
      description: Array of component names that can be used in bloks, multilink, or richtext.
    conditional_settings:
      type: array
      description: Array containing conditional settings for the field.
      items:
        $ref: "#/ConditionalSettings"
    customize_toolbar:
      type: boolean
      description: True if richtext or markdown toolbar can be customized.
      default: false
    datasource_slug:
      type: string
      description: Defines the selectable datasource for options (internal sources).
    default_value:
      type: string
      description: Default value for the field.
    description:
      type: string
      description: The description shown in the editor interface.
    display_name:
      type: string
      description: Name used in the editor interface.
    disable_time:
      type: boolean
      description: Disables time selection for datetime fields.
      default: false
    external_datasource:
      type: string
      description: Defines external datasource URL for options.
    field_type:
      type: string
      description: Name of the custom field type plugin (custom fields).
    filetypes:
      type: array
      items:
        type: string
      description: Array of file types for multiasset fields (e.g., images, videos).
    filter_content_type:
      type: array
      items:
        type: string
      description: Array of content types that can be selected in an option field.
    folder_slug:
      type: string
      description: Defines a folder filter for internal stories in options.
    force_link_scope:
      type: boolean
      description: Forces folder restrictions in multilink fields.
      default: false
    image_crop:
      type: boolean
      description: Activates forced image cropping (image fields).
    image_height:
      type: string
      description: Defines image height in pixels or ratio (image fields).
    image_width:
      type: string
      description: Defines image width in pixels or ratio (image fields).
    keep_image_size:
      type: boolean
      description: Keeps the original image size (image fields).
    keys:
      type: array
      items:
        type: string
      description: Array of field keys for group field types.
    link_scope:
      type: string
      description: Defines folder filtering for multilink fields.
      default: false
    max_length:
      type: integer
      format: int64
      description: Maximum length for text, textarea, or markdown fields.
    maximum:
      type: integer
      format: int64
      description: Maximum number of components for bloks type fields.
    minimum:
      type: integer
      format: int64
      description: Minimum number of components for bloks type fields.
    max_options:
      type: integer
      format: int64
      description: Maximum options that can be selected in an options field.
    min_options:
      type: integer
      format: int64
      description: Minimum options that should be selected in an options field.
    no_translate:
      type: boolean
      description: Excludes the field from translation export (for text and number types).
    options:
      type: array
      description: Array of data source entries for option fields.
      items:
        $ref: "#/FieldOption"
    toolbar:
      type: array
      items:
        type: string
      description: Array of enabled items when customizing the toolbar for richtext/markdown.
    tooltip:
      type: boolean
      description: True if description is shown as a tooltip.
      default: false
    regex:
      type: string
      description: Regex validation for text fields.
    required:
      type: boolean
      description: Is this field required?
      default: false
    restrict_components:
      type: boolean
      description: Enables restriction for nestable components in bloks (for bloks and richtext).
      default: false
    restrict_content_types:
      type: boolean
      description: Activates restriction for content types in multilink fields.
    rich_markdown:
      type: boolean
      description: Enables rich markdown view for markdown fields.
    rtl:
      type: boolean
      description: Enables RTL for markdown, text, or textarea fields.
    source:
      type: string
      description: Defines where options are sourced from (e.g., internal stories, external APIs).
    translatable:
      type: boolean
      description: True if translation is enabled over the field.
      default: false
    use_uuid:
      type: boolean
      description: Specifies if UUID should be used in options.
      default: true
    restrict_type:
      type: string
      description: Restricts the type of components used in bloks fields (e.g., tags,
        groups).
    component_tag_whitelist:
      type: array
      items:
        type: integer
      description: Array of tag IDs for restricting components in bloks fields.
    component_group_whitelist:
      type: array
      items:
        type: string
      description: Array of group UUIDs for restricting components in bloks fields.
    style_options:
      type: array
      items:
        type: object
      description: Custom CSS data for richtext fields.
    allow_custom_attributes:
      type: boolean
      description: Enables custom attributes in links for richtext or multilink fields.
    allow_multiline:
      type: boolean
      description: Enables empty paragraphs in markdown fields.
    min_value:
      type: integer
      description: Minimum value for number fields.
    max_value:
      type: integer
      description: Maximum value for number fields.
    decimals:
      type: integer
      description: Number of decimal places for number fields.
    steps:
      type: integer
      description: Step interval for number fields.
    inline_label:
      type: boolean
      description: Makes the label of a boolean field inline.
    exclude_empty_option:
      type: boolean
      description: Hides empty options in option fields.
    entry_appearance:
      type: string
      description: Appearance of an option (link or card) in an option field.
      default: link
    allow_advanced_search:
      type: boolean
      description: Allows advanced search in option fields.
    is_reference_type:
      type: boolean
      description: True if the options field is of type reference.
    allow_external_url:
      type: boolean
      description: Allows external URLs in asset or multiasset fields.
    email_link_type:
      type: boolean
      description: Allows emails in multilink fields.
      default: false
    asset_link_type:
      type: boolean
      description: Allows assets in multilink fields.
      default: false
    show_anchor:
      type: boolean
      description: Enables anchor field for internal links in multilink fields.
      default: false
    required_fields:
      type: string
      description: Comma-separated list of required fields for custom fields.
    exclude_from_merge:
      type: boolean
      description: Excludes a blok from merge actions (Dimensions App).
    exclude_from_overwrite:
      type: boolean
      description: Excludes a blok from overwrite actions (Dimensions App).
    force_merge:
      type: boolean
      description: Forces overwriting a blok during a merge action (Dimensions App).
  required:
    - type
    - pos

Field:
  type: object
  allOf:
    - $ref: "#/FieldInput"
    - type: object
      properties:
        id:
          type: integer
          format: int64
          description: Numeric Unique ID

FieldOption:
  type: object
  properties:
    name:
      type: string
    value:
      type: string
  required:
    - name
    - value

ConditionalSettings:  
  type: object
  properties:
    modifications:
      type: array
      description: "List of modifications to be applied to the field. Only 1 modification can be applied at a time (hide OR required)"
      items:
        $ref: "#/Modification"
    rule_match:
      description: "Define if all or any of the conditions should be met to apply the modifications"
      type: string
      enum: [any, all]
    rule_conditions:
      description: "Conditional rules to be applied to the field"
      type: array
      items:
        $ref: "#/RuleCondition"
        

Modification:
  type: object
  properties:
    display:
      type: string
      enum: [hide]
    required:
      type: boolean

Properties:
  type: object
  properties:
    component:
      $ref: "#/Component"
    fields:
      type: array
      items:
        $ref: "#/Field"
    total:
      type: integer
      format: int64
      description: The total number of components
    cursor:
      type: string
      description: The cursor to continue from
    has_more:
      type: boolean
      description: Whether there are more components to fetch
      
RuleCondition:
  type: object
  properties:
    validated_object:
      $ref: "#/ValidatedObject"
    validation:
      type: string
      enum: [empty, not_empty, equals, not_equals]
    value:
      type: string
      nullable: true

ValidatedObject:
  type: object
  properties:
    type:
      type: string
      enum: [field]
    field_key:
      type: string
    field_attr:
      type: string
      enum: [value]